// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Belt_Int = require("rescript/lib/js/belt_Int.js");
var Stdlib_Int = require("@dzakh/rescript-stdlib/src/Stdlib_Int.bs.js");
var Caml_option = require("rescript/lib/js/caml_option.js");
var S$ReScriptStruct = require("rescript-struct/src/S.bs.js");

function intToString(struct) {
  return S$ReScriptStruct.transform(struct, (function ($$int) {
                return $$int.toString();
              }), (function (string) {
                var $$int = Belt_Int.fromString(string);
                if ($$int !== undefined) {
                  return $$int;
                } else {
                  return S$ReScriptStruct.$$Error.raise("Can't convert string to int");
                }
              }), undefined);
}

function stringToInt(i) {
  return S$ReScriptStruct.transform(i, (function (str) {
                var $$int = Stdlib_Int.fromString(str);
                if ($$int !== undefined) {
                  return $$int;
                } else {
                  return S$ReScriptStruct.$$Error.raise("Can't convert string to int");
                }
              }), (function ($$int) {
                return $$int.toString();
              }), undefined);
}

function raiseFromOption(struct) {
  return S$ReScriptStruct.transform(struct, (function (i) {
                if (i !== undefined) {
                  return Caml_option.valFromOption(i);
                } else {
                  return S$ReScriptStruct.$$Error.raise("None is not accepted");
                }
              }), (function (i) {
                return Caml_option.some(i);
              }), undefined);
}

exports.intToString = intToString;
exports.stringToInt = stringToInt;
exports.raiseFromOption = raiseFromOption;
/* S-ReScriptStruct Not a pure module */
